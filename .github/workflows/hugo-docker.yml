# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.114.0
    steps:
      - name: 安装hugo
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: 安装Dart Sass
        run: sudo snap install dart-sass
      - name: 迁出代码
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: 安装node依赖
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "gudebin.top"
      - name: 设置工作目录
        run: |
          mkdir build
          mv public build
          cp Dockerfile build
          cp docker-compose.yaml build
          cp default.conf build
      - name: 上传
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          # password: ${{ secrets.REMOTE_PASS }}
          key: ${{ secrets.REMOTE_KEY }}
          port: 22
          # 上传多个文件
          source: "build/*"
          target: ${{ secrets.REMOTE_TARGET }}
      - name: 使用ssh执行命令
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          # password: ${{ secrets.REMOTE_PASS }}
          key: ${{ secrets.REMOTE_KEY }}
          port: 22
          # 构建镜像
          script: |
            cd ${{ secrets.REMOTE_TARGET }}/build
            docker compose down
            docker compose build
            docker compose up -d
            exit
